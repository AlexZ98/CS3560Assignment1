public class MultipleChoiceQuestion implements VotingService{

    public int getaCount() {
        return aCount;
    }
    public int getbCount() {
        return bCount;
    }
    public int getcCount() {
        return cCount;
    }
    public int getdCount() {
        return dCount;
    }

    private int aCount, bCount, cCount, dCount;
    private String candidateAnswer1, candidateAnswer2, candidateAnswer3, candidateAnswer4;

    public MultipleChoiceQuestion(String candidateAnswer1, String candidateAnswer2, String candidateAnswer3, String candidateAnswer4 ){
        this.candidateAnswer1 = candidateAnswer1;
        this.candidateAnswer2 = candidateAnswer2;
        this.candidateAnswer3 = candidateAnswer3;
        this.candidateAnswer4 = candidateAnswer4;
    }
    public void poll(Student student, String studentAnswer) {
        if(!student.getHasAnswered() && studentAnswer.length()<5) {
            System.out.println("Student ID: " + student.getId() + " | Answer: " + studentAnswer);
            if (studentAnswer.contains(candidateAnswer1)) {
                aCount++;
            } if (studentAnswer.contains(candidateAnswer2)) {
                bCount++;
            } if (studentAnswer.contains(candidateAnswer3)) {
                cCount++;
            }
            if (studentAnswer.contains(candidateAnswer4)) {
                dCount++;
            }
            else if(!studentAnswer.contains(candidateAnswer4)&&!studentAnswer.contains(candidateAnswer3)&&!studentAnswer.contains(candidateAnswer2)&&!studentAnswer.contains(candidateAnswer1)){
                throw new IllegalArgumentException("Invalid answer submitted");
            }
            student.answered();
        }
    }
        public void getResults(){
            System.out.println("# Responses for A: " + getaCount() + " | # Responses for B: " + getbCount() + " | # Responses for C: " + getcCount() + " | # Responses for D: " + getdCount());

        }
    }

